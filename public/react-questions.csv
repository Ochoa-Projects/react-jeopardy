"question_id","category","answer","question"
1,"Array Methods","{filter(),filter}","This array method will iterate through an array and return an array containing only the items that pass a provided boolean condition."
2,"Array Methods","{includes(),includes}","This string method is used to check if a substring exists within another string."
3,"Array Methods","{map(),map}","This array method will iterate through each item in an array, perform an action on each item, and return a new array with each transformed item."
4,"Array Methods","{forEach(),forEach}","This array method will loop through each item in an array, perform an action on each item, and mutate the original array."
5,"Array Methods","{reduce(),reduce}","This array method will iterate through each item in an array, and through an inital value and an accumulator returns one value."
6,"Array Methods","{sort(),sort}","This array method can be used to organize and mutate an array, for example ascending numerically or alphabetically."
7,"Array Methods","{includes(),includes}","This array method checks if a specified item exists in an array and returns a boolean value."
8,"Array Methods","{find(),find}","This array method takes a testing function as an argument and returns only the first item that passes the check."
9,"Array Methods","{indexOf(),indexOf}","This array method returns the number index of a specific item in an array, and -1 if it is not found."
10,"Array Methods","{concat(),concat}","This array method takes two or more arrays and returns a new merged array."
11,"Components","{""Class Component"",Class}","This implementation of a comopnent ```extends React.Component``` and uses ES6 classes."
12,"Components","{""Functional Component"",Functional}","This implementation of a component involves using a Javascript function."
13,"Components","{Props}","Users can pass and access data using this component attribute."
15,"Components","{""Higher-Order Component"",Higher-Order,""Higher Order""}","This is a function that takes a component and returns a new component, typically used to extract and reuse component logic."
16,"Components","{pure}","A React component is considrered this if it renders the same output for the same state and props."
17,"Components","{reusability}","This prevents the nuisance of repeating code and is one of the main attractions of using React and React components."
18,"Components","{forceUpdate(),forceUpdate}"," If your render() method depends on data other than state and props, you can tell React that the component needs re-rendering by calling this component method."
19,"Components","{constructor(),constructor}","This method is called and needed if you intialize state or need to bind methods in a class component."
20,"Components","{super(),super}","You should call this method with props as its parameter inside the constructor method to avoid this.props from being undefined."
21,"Components","{render(),render}","This is the only required method in a class component."
22,"Core","{JSX}","This is a HTML-like syntax that represents what the UI should look like in a React component."
23,"Core","{React}","This is a front-end JavaScript library that mainly follows the component-based approach for building user interface (UI) components for a single page application."
24,"Core","{ReactDOM}","This library of a React app compares the element to the previous render and ONLY applies necessary DOM updates."
25,"Core","{Component}","This feature of React allows users to split the UI into independent, reusable pieces."
26,"Core","{""React Hooks"",Hooks}","These are built-in functions that allow React developers to use state and lifecycle methods in React functional components."
27,"Core","{react-router,""react router""}","This is a library that allows us build and navigate through a single-page application in React."
28,"Core","{prototype}","This is the mechanism by which JavaScript objects inherit features from one another."
29,"Core","{inheritance}","An example of this concept involves every array having to the properties that include array methods through the prototype object."
30,"Core","{Redux}","This is a library used for managing and centralizing application state."
31,"Core","{Javascript}","This programming language is a cross-platform, object-oriented scripting language used to make webpages interactive."
32,"Core","{HTML}","This programming laguage defines the meaning and the structure of web content."
33,"Core","{CSS}","This is a stylesheet language used to describe the presentation of a document written in HTML or XML"
34,"Core","{state}","Whenever there is a change to the property values of this object, a re-rendering of the component is triggered."
35,"General JS","{key}","When making lists of elements in React we need each element to have this unique atrribute provided to it."
36,"General JS","{this}","This keyword enables you to use the same method definition for every object you create."
37,"General JS","{""for loop"",for}","This standard loop allows javascript developers to dictate exactly how many times to run the code inside the loop."
38,"General JS","{break}","This javascript keyword allows users to exit a loop, as a way to prevent the loop from having to run each iteration."
39,"General JS","{return}","This Javascript keyword gives users the ability to save values from within a function and use these values outside that function's scope."
40,"General JS","{""if statement"",if}","This built-in javascript statement allows users to only execute a block of code when a given condition is met."
41,"General JS","{%,percentage}","This symbol allows javascript to perform modulus calculations, which returns only the remainder of one number being divided by another."
42,"General JS","{""falsy value"",falsy}","Undefined , null , NaN , 0 , , and false are all examples of this."
43,"General JS","{callback}","This is function that is passed into another function as an argument."
44,"General JS","{scope}","This is a Javascript concept that decribes the exclusivity of items defined within a function which are not accessible to code outside a function's block."
45,"General JS","{const}","Use this keyword to create a constant variable in Javascript."
46,"JSX","{""Camel Case"",Camel-Case}","Just like Javascript, JSX uses this type of naming convention for the properties of a JSX element."
47,"JSX","{React.createElement(),React.createElement,createElement(),createElement}","Babel compiles JSX down to this React method/call."
48,"JSX","{expression}","This can be a React variable, or property, or any other valid JavaScript expression. JSX will execute this and return the result. Denoted by ```{}```"
49,"JSX","{fragment}","This wraps multiple line and prevents unnecesarily adding extra nodes to the DOM. This looks like an empty HTML tag: ```<></>```"
50,"JSX","{className}","This JSX attribute replaces the HTML ```class``` attribute."
51,"JSX","{""JavaScript XML""}","JSX stands for this."
52,"JSX","{""parent element"",parent}","Multiple JSX elements must be wrapped by this."
53,"JSX","{""child element"",child}","This element is a sub element of its parent. If it is a component, props can be passed from the parent to this."
54,"JSX","{""return statement"",return}","In order for JSX elements to be rendered in react, they must be put in this type of statement."
55,"JSX","{quotes}","In addition to curly braces, you can use these to specify string literals as attributes."
56,"Props","{""Prop Drilling""}","A disadvantage of this way of passing data through a React app is that the components that should otherwise not be aware of the data have access to the data."
57,"Props","{destructuring}","You can access the entire props object as a function paramater, but you can also isolate individual properties within props using this method."
58,"Props ","{""render props""}","This term refers to a technique for sharing code between React components using a prop whose value is a function."
59,"Props","{propTypes}","You can run typechecking on the props of a component using this."
60,"Props","{defaultProps}","This allows you to set default values for the props argument."
61,"Props","{this.props}","If you are using class components, you can access the props from this property of the component instance."
62,"Props","{""pure functions"",pure}","All React components must act like these types of functions with respect to their props."
63,"Props","{this.props.name}","You would access a prop called name in a class component using this."
64,"Props","{object}","Props is this kind of data type."
65,"Props","{properties}","Props stands for this."
66,"React Hooks","{useState(),useState}","This React Hook allows for funcional components to manage state."
67,"React Hooks","{setState(),setState}","This is the second value of the array returned when the React Hook ```useState()``` is called."
68,"React Hooks","{useEffect(),useEffect}","This react Hook is ideal when React developers need to fetch data in a functional component."
69,"React Hooks","{useEffect(),useEffect}","This react Hook by default will run after the first render and also after each time the component is updated."
70,"React Hooks","{""Custom Hooks"",Custom}","These types of Hooks are considered to be sufficient replacements for render props and HoCs (Higher-Order components) and reducing the amount of nesting required."
71,"React Hooks","{useContext(),useContext}","This hook is used for creating common data that is to be accessed by the components hierarchy without having to pass the props down to each level."
72,"React Hooks","{useReducer(),useReducer}","This hook is used when there is complex state logic that has several sub-values or new state is dependent on the previous state."
73,"React Hooks","{useRef(),useRef}","One example of when to use this hook would be to avoid infinite re-renders with the useState() hook. This hook does not cause a component re-render when its value is changed."
74,"React Hooks","{useCallback(),useCallback}","This lets you cache a function definition between re-renders."
75,"React Hooks","{useMemo(),useMemo}","This lets you cache the result of a calculation between re-renders."
76,"React Hooks","{useLayoutEffect(),useLayoutEffect}","This is a version of useEffect that fires before the browser repaints the screen."
77,"ReactDOM","{""Virtual DOM""}","This is a concept where a representation of the real DOM is kept inside the memory and is synced with the real DOM by a library such as ReactDOM"
78,"ReactDOM","{createPortal(),createPortal}","This method provides a way to render children into a DOM node that exists outside the hierarchy of the DOM component."
79,"ReactDOM","{flushSync(),flushSync}","This method forces React to flush any updates inside the provided callback synchronously, which ensures the DOM is updated immediately."
80,"ReactDOM","{createRoot(),createRoot}","This creates a react root for the supplied container and returns the root. "
81,"ReactDOM","{hydrateRoot(),hydrateRoot}","Similar to createRoot(), this is used to hydrate a container whose HTML contents were rendered by ReactDOMServer."
82,"ReactDOM","{renderToPipeableStream(),renderToPipeableStream}","This renders a React element to its initial HTML. Returns a stream with a pip(res) method to pipe the output and abort() to abort the request."
83,"ReactDOM","{renderToReadableStream(),renderToReadableStream}","This streams a React element to its initial HTML. It returns a Promise that resolves to a Readable Stream."
84,"ReactDOM","{renderToStaticMarkup(),renderToStaticMarkup}","Similar to renderToString, escept this doesn't create extra DOM attributes that React uses internally. Useful if you want to use React as a simple static page generator."
85,"ReactDOM","{renderToString(),renderToString}","This renders a React element to its inititial HTML. React will return an HTML string. Used for faster page loads and to alloew search engines to crawl your pages for SEO purposes."
86,"ReactDOM","{renderToStaticNodeStream(),renderToStaticNodeStream}","Similar to renderToNodeStream, except this doesn't create extra DOM attributes that React uses internally, such as data-reactroot."
87,"ReactDOM","{renderToNodeStream(),renderToNodeStream}","This renders a React element to its initial HTML and returns a Node.js Readable stream that outputs an HTML string."
88,"CSS","{flexbox}","This allows responsive elements within a container to be automatically arranged depending on viewport size."
89,"CSS","{""CSS grid"",grid}","This offers a layout system based on rows and columns making it easier to design web pages with having to use floats and positioning. "
90,"CSS","{""box model"",box}","This is the concept that a rectangular container is wrapped around every HTML element."
91,"CSS","{""universal selector"",universal}","This works like a wildcard character, selecting all elements on the page "
92,"CSS","{""element type selector"",""element type""}","This selector matches to one or more types of HTML elements of the same name."
93,"CSS","{""ID selector"",ID}","This matches any HTML element that has an ID attribute with the same value as that of the selector."
94,"CSS","{""class selector"",class}","This matches all HTML elements on the page that have their class attribute set to the same value as the class."
95,"CSS","{""descendant combinator"",descendant}","This lets you combine two or more selectors to allow for more specific selection methods."
96,"CSS","{""child combinator"",child}","This is similar to the descendant combinator, however this only targets immediate child elements."
97,"CSS","{""general sibling combinator"",""general sibling""}","This selector matches elements based on sibling relationships."
98,"CSS","{""adjacent sibling combinator"",""adjacent sibling""}","This is similar to the general sibling operator, the difference is that this targets only immediate siblings."
99,"CSS","{""attribute selector"",attribute}","Denoted by square brackets, this targets elements based on the presence/values of HTML attributes."
100,"Misc","{Jest}","This is the testing library most often associated with React."
101,"Misc","{Babel}","This is the tool used to take JSX and turn it into createElement calls."
102,"Misc","{React.lazy(),React.lazy,lazy(),lazy}","You can use this React function to handle code splitting."
103,"Misc","{ESLint,lint}","This staticlalt analyzes your code to quickly find problem. It is built into most text editors and can be ran as part of a continuous integration pipeline."
104,"Misc","{componentDidMount(),componentDidMount}","This Lifecycle method runs after the inital component output has been rendered to the DOM"
105,"Misc","{componentWillUnmount(),componentWillUnmount}","This is the lifecycle method that is called before a component is removed from the DOM."
106,"Misc","{componentDidUpdate(),componentDidUpdate}","This lifecycle method is invoked immediately after updating occurs, i.e. changes in props or state."
107,"Misc","{""server side rendering"",""server side"",""server-side rendering"",server-side}","This type of rendering works by converting HTML files in the server into usable information for the browser."
108,"Misc","{""client side rendering"",""client side"",""client-side rendering"",client-side}","When developers talk about this type of rendering, they're talking about rendering content in th ebrowser using JavaScript."
109,"Misc","{NextJS}","This web development framework created by Vercel enables React-based wen applications with server-side rednering and generating static websites."
